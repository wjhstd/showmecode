<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.ityousee" />
    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
    </bean>

<!--    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
<!--          init-method="init" destroy-method="close">-->
<!--        &lt;!&ndash; 指定连接数据库的驱动 &ndash;&gt;-->
<!--        <property name="driverClassName" value="${driver}" />-->
<!--        <property name="url" value="${url}" />-->
<!--        <property name="username" value="${username}" />-->
<!--        <property name="password" value="${password}" />-->

<!--        &lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
<!--        <property name="initialSize" value="3" />-->
<!--        <property name="minIdle" value="3" />-->
<!--        <property name="maxActive" value="20" />-->

<!--        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
<!--        <property name="maxWait" value="60000" />-->

<!--        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="60000" />-->

<!--        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
<!--        <property name="minEvictableIdleTimeMillis" value="300000" />-->

<!--        <property name="validationQuery" value="SELECT 'x'" />-->
<!--        <property name="testWhileIdle" value="true" />-->
<!--        <property name="testOnBorrow" value="false" />-->
<!--        <property name="testOnReturn" value="false" />-->

<!--        &lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
<!--        <property name="poolPreparedStatements" value="true" />-->
<!--        <property name="maxPoolPreparedStatementPerConnectionSize"-->
<!--                  value="20" />-->

<!--        &lt;!&ndash; 配置监控统计拦截的filters，去掉后监控界面sql无法统计 &ndash;&gt;-->
<!--        <property name="filters" value="stat" />-->
<!--    </bean>-->

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/ityousee/dao/*.xml"></property>
        <!--加入PageHelper-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
<!--        <property name="plugins">-->
<!--            <array>-->
<!--                <bean class="com.github.pagehelper.PageHelper">-->
<!--                    <property name="properties">-->
<!--                        <value>-->
<!--                            dialect=mysql-->
<!--                            reasonable=true-->
<!--                        </value>-->
<!--                    </property>-->
<!--                </bean>-->
<!--            </array>-->
<!--        </property>-->
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ityousee.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

<!--    org.springframework.jdbc.datasource.DataSourceTransactionManager ：使用 Spring JDBC或iBatis 进行持久化数据时使用-->
<!--    org.springframework.orm.hibernate3.HibernateTransactionManager ：使用 Hibernate版本进行持久化数据时使用-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 开启事务的注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

<!--    <aop:aspectj-autoproxy proxy-target-class="true"/>-->
</beans>